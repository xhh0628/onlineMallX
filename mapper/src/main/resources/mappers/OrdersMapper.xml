<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xhh.onlineMall.dao.OrdersMapper" >
  <resultMap id="BaseResultMap" type="com.xhh.onlineMall.entity.Orders" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="untitled" property="untitled" jdbcType="VARCHAR" />
    <result column="receiver_name" property="receiverName" jdbcType="VARCHAR" />
    <result column="receiver_mobile" property="receiverMobile" jdbcType="VARCHAR" />
    <result column="receiver_address" property="receiverAddress" jdbcType="VARCHAR" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="actual_amount" property="actualAmount" jdbcType="INTEGER" />
    <result column="pay_type" property="payType" jdbcType="INTEGER" />
    <result column="order_remark" property="orderRemark" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="delivery_type" property="deliveryType" jdbcType="VARCHAR" />
    <result column="delivery_flow_id" property="deliveryFlowId" jdbcType="VARCHAR" />
    <result column="order_freight" property="orderFreight" jdbcType="DECIMAL" />
    <result column="delete_status" property="deleteStatus" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="delivery_time" property="deliveryTime" jdbcType="TIMESTAMP" />
    <result column="flish_time" property="flishTime" jdbcType="TIMESTAMP" />
    <result column="cancel_time" property="cancelTime" jdbcType="TIMESTAMP" />
    <result column="close_type" property="closeType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbg.generated
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbg.generated
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbg.generated
    -->
    order_id, user_id, untitled, receiver_name, receiver_mobile, receiver_address, total_amount, 
    actual_amount, pay_type, order_remark, status, delivery_type, delivery_flow_id, order_freight, 
    delete_status, create_time, update_time, pay_time, delivery_time, flish_time, cancel_time, 
    close_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xhh.onlineMall.entity.OrdersExample" >
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xhh.onlineMall.entity.OrdersExample" >
    <!--
      WARNING - @mbg.generated
    -->
    delete from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.xhh.onlineMall.entity.OrdersExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbg.generated
    -->
    update orders
    <set >
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.untitled != null" >
        untitled = #{record.untitled,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverName != null" >
        receiver_name = #{record.receiverName,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverMobile != null" >
        receiver_mobile = #{record.receiverMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverAddress != null" >
        receiver_address = #{record.receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.totalAmount != null" >
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.actualAmount != null" >
        actual_amount = #{record.actualAmount,jdbcType=INTEGER},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.orderRemark != null" >
        order_remark = #{record.orderRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.deliveryType != null" >
        delivery_type = #{record.deliveryType,jdbcType=VARCHAR},
      </if>
      <if test="record.deliveryFlowId != null" >
        delivery_flow_id = #{record.deliveryFlowId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderFreight != null" >
        order_freight = #{record.orderFreight,jdbcType=DECIMAL},
      </if>
      <if test="record.deleteStatus != null" >
        delete_status = #{record.deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payTime != null" >
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deliveryTime != null" >
        delivery_time = #{record.deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.flishTime != null" >
        flish_time = #{record.flishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cancelTime != null" >
        cancel_time = #{record.cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.closeType != null" >
        close_type = #{record.closeType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbg.generated
    -->
    update orders
    set order_id = #{record.orderId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      untitled = #{record.untitled,jdbcType=VARCHAR},
      receiver_name = #{record.receiverName,jdbcType=VARCHAR},
      receiver_mobile = #{record.receiverMobile,jdbcType=VARCHAR},
      receiver_address = #{record.receiverAddress,jdbcType=VARCHAR},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      actual_amount = #{record.actualAmount,jdbcType=INTEGER},
      pay_type = #{record.payType,jdbcType=INTEGER},
      order_remark = #{record.orderRemark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      delivery_type = #{record.deliveryType,jdbcType=VARCHAR},
      delivery_flow_id = #{record.deliveryFlowId,jdbcType=VARCHAR},
      order_freight = #{record.orderFreight,jdbcType=DECIMAL},
      delete_status = #{record.deleteStatus,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      delivery_time = #{record.deliveryTime,jdbcType=TIMESTAMP},
      flish_time = #{record.flishTime,jdbcType=TIMESTAMP},
      cancel_time = #{record.cancelTime,jdbcType=TIMESTAMP},
      close_type = #{record.closeType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>